# Generated by Django 4.0.1 on 2024-04-18 07:39

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountCustomuser',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
                ('birthday', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'account_customuser',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCustomuserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'account_customuser_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCustomuserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'account_customuser_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DietData',
            fields=[
                ('diet_num', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('kcal', models.FloatField()),
                ('category', models.CharField(max_length=100)),
                ('carb', models.FloatField()),
                ('fat', models.FloatField()),
                ('protein', models.FloatField()),
                ('etc', models.CharField(max_length=100)),
                ('caption', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'diet_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('mem_idx', models.AutoField(primary_key=True, serialize=False)),
                ('mem_email', models.CharField(max_length=100, unique=True)),
                ('mem_password', models.CharField(max_length=100)),
                ('mem_username', models.CharField(max_length=20)),
                ('mem_birthday', models.DateField()),
                ('mem_gender', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserBia',
            fields=[
                ('bia_num', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('username', models.CharField(max_length=100)),
                ('age', models.IntegerField()),
                ('height', models.FloatField()),
                ('weight', models.FloatField()),
                ('skeletal', models.FloatField()),
                ('fat', models.FloatField()),
                ('fat_per', models.FloatField()),
                ('bmi', models.FloatField()),
                ('status', models.CharField(max_length=100)),
                ('bmr', models.FloatField()),
                ('significants', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'user_bia',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkoutData',
            fields=[
                ('work_num', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('part', models.CharField(max_length=100)),
                ('target', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=100)),
                ('etc', models.CharField(max_length=100)),
                ('difficulty', models.CharField(max_length=100)),
                ('caption', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'workout_data',
                'managed': False,
            },
        ),
    ]
